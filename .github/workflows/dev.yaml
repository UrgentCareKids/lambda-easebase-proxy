name: Dev Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-push: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Create ECR repository if doesn't exist
        run: |
          aws ecr describe-repositories --repository-names gsh/lambda-easebase-proxy || aws ecr create-repository --repository-name gsh/lambda-easebase-proxy
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker container
        id: build-image
        run: |
          docker build -t $ECR_REGISTRY/gsh/lambda-easebase-proxy:dev .
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
      - name: Push image to Amazon ECR
        run: docker push $ECR_REGISTRY/gsh/lambda-easebase-proxy:dev
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
      - name: Update AWS dev lambda to point to new image
        run: |
          image_sha=`docker images --digests | grep lambda-easebase-proxy | grep dev | awk '{print $3}' | grep sha256`
          echo "Pointing lambda to new sha: ${image_sha}"
          aws lambda update-function-code --function-name lambda-easebase-proxy \
          --image-uri $ECR_REGISTRY/gsh/lambda-easebase-proxy@${image_sha} 2>&1 > /dev/null
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
